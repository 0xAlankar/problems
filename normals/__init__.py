from cs50 import SQL

import check50
import sqlparse


@check50.check()
def exists():
    """SQL files exist"""
    for i in range(10):
        check50.exists(f"{i + 1}.sql")
    check50.include("normals.db")


@check50.check(exists)
def test1():
    """1.sql produces correct result"""
    check_single_cell(run_query("1.sql"), '8.703')


@check50.check(exists)
def test2():
    """2.sql produces correct result"""
    check_single_cell(run_query("2.sql"), '7.453')


@check50.check(exists)
def test3():
    """3.sql runs without error"""
    run_query("3.sql")


@check50.check(exists)
def test4():
    """4.sql produces correct result"""
    check_single_cell(run_query("4.sql"), '-1.837')


@check50.check(exists)
def test5():
    """5.sql produces correct result"""
    check_single_cell(run_query("5.sql"), '30.559')


@check50.check(exists)
def test6():
    """6.sql produces correct result"""
    check_multi_col(
        run_query("6.sql"),
        [{'0.5', '55.5', '26.635'},
         {'0.5', '26.767', '56.5'},
         {'0.5', '26.898', '57.5'},
         {'0.5', '58.5', '27.042'},
         {'0.5', '59.5', '27.208'},
         {'0.5', '27.379', '60.5'},
         {'0.5', '61.5', '27.528'},
         {'0.5', '62.5', '27.644'},
         {'0.5', '27.733', '63.5'},
         {'0.5', '27.809', '64.5'},
         {'0.5', '27.875', '65.5'},
         {'0.5', '66.5', '27.932'},
         {'0.5', '67.5', '27.979'},
         {'0.5', '28.023', '68.5'},
         {'0.5', '28.07', '69.5'},
         {'0.5', '70.5', '28.119'},
         {'0.5', '28.162', '71.5'},
         {'0.5', '28.197', '72.5'},
         {'0.5', '73.5', '28.226'},
         {'0.5', '28.255', '74.5'},
         {'26.679', '55.5', '1.5'},
         {'26.849', '1.5', '56.5'},
         {'27.017', '57.5', '1.5'},
         {'27.189', '58.5', '1.5'},
         {'59.5', '1.5', '27.37'},
         {'27.547', '60.5', '1.5'},
         {'61.5', '1.5', '27.701'},
         {'27.819', '62.5', '1.5'},
         {'63.5', '27.905', '1.5'},
         {'27.967', '1.5', '64.5'},
         {'28.012', '1.5', '65.5'},
         {'66.5', '28.044', '1.5'},
         {'67.5', '1.5', '28.069'},
         {'28.098', '1.5', '68.5'},
         {'28.137', '1.5', '69.5'},
         {'70.5', '28.18', '1.5'},
         {'28.218', '1.5', '71.5'},
         {'28.248', '1.5', '72.5'},
         {'28.27', '73.5', '1.5'},
         {'28.286', '74.5', '1.5'},
         {'2.5', '55.5', '26.733'},
         {'2.5', '26.927', '56.5'},
         {'2.5', '57.5', '27.122'},
         {'58.5', '2.5', '27.313'},
         {'2.5', '59.5', '27.503'},
         {'2.5', '60.5', '27.685'},
         {'2.5', '27.843', '61.5'},
         {'27.966', '2.5', '62.5'},
         {'63.5', '2.5', '28.054'},
         {'28.11', '2.5', '64.5'},
         {'28.143', '2.5', '65.5'},
         {'28.161', '66.5', '2.5'},
         {'67.5', '28.173', '2.5'},
         {'28.192', '2.5', '68.5'},
         {'2.5', '28.221', '69.5'},
         {'2.5', '70.5', '28.251'},
         {'2.5', '71.5', '28.274'},
         {'2.5', '28.284', '72.5'},
         {'2.5', '73.5', '28.279'},
         {'2.5', '74.5', '28.265'},
         {'26.772', '55.5', '3.5'},
         {'26.976', '3.5', '56.5'},
         {'27.183', '57.5', '3.5'},
         {'58.5', '27.385', '3.5'},
         {'27.582', '59.5', '3.5'},
         {'27.769', '3.5', '60.5'},
         {'27.934', '3.5', '61.5'},
         {'62.5', '3.5', '28.066'},
         {'63.5', '28.161', '3.5'},
         {'28.221', '3.5', '64.5'},
         {'28.255', '3.5', '65.5'},
         {'66.5', '28.273', '3.5'},
         {'67.5', '28.286', '3.5'},
         {'28.303', '3.5', '68.5'},
         {'28.325', '3.5', '69.5'},
         {'28.339', '70.5', '3.5'},
         {'28.339', '3.5', '71.5'},
         {'28.314', '3.5', '72.5'},
         {'28.266', '3.5', '73.5'},
         {'28.201', '3.5', '74.5'},
         {'26.791', '55.5', '4.5'},
         {'26.987', '4.5', '56.5'},
         {'27.195', '57.5', '4.5'},
         {'58.5', '27.401', '4.5'},
         {'59.5', '27.603', '4.5'},
         {'60.5', '27.796', '4.5'},
         {'27.969', '61.5', '4.5'},
         {'62.5', '4.5', '28.112'},
         {'63.5', '28.218', '4.5'},
         {'28.289', '64.5', '4.5'},
         {'65.5', '28.334', '4.5'},
         {'66.5', '28.363', '4.5'},
         {'67.5', '28.387', '4.5'},
         {'28.411', '4.5', '68.5'},
         {'28.429', '4.5', '69.5'},
         {'28.43', '70.5', '4.5'},
         {'71.5', '4.5', '28.404'},
         {'72.5', '28.338', '4.5'},
         {'28.232', '73.5', '4.5'},
         {'28.1', '74.5', '4.5'},
         {'5.5', '26.789', '55.5'},
         {'5.5', '26.969', '56.5'},
         {'5.5', '57.5', '27.168'},
         {'5.5', '58.5', '27.372'},
         {'5.5', '59.5', '27.575'},
         {'5.5', '60.5', '27.771'},
         {'5.5', '27.95', '61.5'},
         {'5.5', '62.5', '28.103'},
         {'5.5', '28.221', '63.5'},
         {'5.5', '28.308', '64.5'},
         {'5.5', '28.37', '65.5'},
         {'5.5', '66.5', '28.417'},
         {'5.5', '67.5', '28.456'},
         {'5.5', '28.489', '68.5'},
         {'5.5', '28.506', '69.5'},
         {'5.5', '70.5', '28.496'},
         {'5.5', '28.445', '71.5'},
         {'5.5', '28.337', '72.5'},
         {'5.5', '28.171', '73.5'},
         {'5.5', '74.5', '27.962'},
         {'55.5', '26.76', '6.5'},
         {'26.922', '6.5', '56.5'},
         {'27.107', '57.5', '6.5'},
         {'58.5', '27.303', '6.5'},
         {'59.5', '27.501', '6.5'},
         {'27.695', '60.5', '6.5'},
         {'27.877', '61.5', '6.5'},
         {'62.5', '28.037', '6.5'},
         {'63.5', '28.17', '6.5'},
         {'28.275', '64.5', '6.5'},
         {'28.357', '65.5', '6.5'},
         {'66.5', '28.424', '6.5'},
         {'67.5', '28.48', '6.5'},
         {'28.519', '6.5', '68.5'},
         {'28.535', '6.5', '69.5'},
         {'28.515', '70.5', '6.5'},
         {'71.5', '28.441', '6.5'},
         {'72.5', '28.295', '6.5'},
         {'73.5', '6.5', '28.069'},
         {'27.78', '74.5', '6.5'},
         {'55.5', '26.683', '7.5'},
         {'26.833', '7.5', '56.5'},
         {'27.006', '57.5', '7.5'},
         {'27.19', '58.5', '7.5'},
         {'27.379', '59.5', '7.5'},
         {'27.567', '60.5', '7.5'},
         {'61.5', '27.748', '7.5'},
         {'62.5', '7.5', '27.915'},
         {'63.5', '28.063', '7.5'},
         {'7.5', '28.19', '64.5'},
         {'28.296', '7.5', '65.5'},
         {'28.383', '66.5', '7.5'},
         {'67.5', '28.452', '7.5'},
         {'28.497', '7.5', '68.5'},
         {'28.508', '7.5', '69.5'},
         {'28.477', '70.5', '7.5'},
         {'28.384', '7.5', '71.5'},
         {'28.208', '7.5', '72.5'},
         {'27.93', '73.5', '7.5'},
         {'27.56', '74.5', '7.5'},
         {'55.5', '8.5', '26.537'},
         {'8.5', '26.691', '56.5'},
         {'8.5', '57.5', '26.858'},
         {'58.5', '8.5', '27.033'},
         {'59.5', '27.211', '8.5'},
         {'27.391', '8.5', '60.5'},
         {'8.5', '27.568', '61.5'},
         {'62.5', '8.5', '27.74'},
         {'63.5', '27.904', '8.5'},
         {'8.5', '28.054', '64.5'},
         {'28.185', '8.5', '65.5'},
         {'66.5', '8.5', '28.295'},
         {'67.5', '28.377', '8.5'},
         {'8.5', '28.426', '68.5'},
         {'8.5', '28.433', '69.5'},
         {'70.5', '8.5', '28.39'},
         {'28.281', '8.5', '71.5'},
         {'28.082', '8.5', '72.5'},
         {'27.77', '8.5', '73.5'},
         {'27.339', '8.5', '74.5'},
         {'55.5', '26.338', '9.5'},
         {'26.509', '9.5', '56.5'},
         {'26.675', '57.5', '9.5'},
         {'58.5', '9.5', '26.841'},
         {'27.009', '59.5', '9.5'},
         {'27.178', '60.5', '9.5'},
         {'61.5', '9.5', '27.351'},
         {'62.5', '9.5', '27.526'},
         {'63.5', '27.702', '9.5'},
         {'27.873', '64.5', '9.5'},
         {'65.5', '9.5', '28.029'},
         {'28.161', '66.5', '9.5'},
         {'67.5', '28.259', '9.5'},
         {'28.314', '9.5', '68.5'},
         {'28.319', '9.5', '69.5'},
         {'70.5', '9.5', '28.267'},
         {'71.5', '28.145', '9.5'},
         {'27.934', '72.5', '9.5'},
         {'27.614', '73.5', '9.5'},
         {'27.193', '74.5', '9.5'},
         {'10.5', '55.5', '26.145'},
         {'26.322', '10.5', '56.5'},
         {'10.5', '26.477', '57.5'},
         {'10.5', '26.631', '58.5'},
         {'10.5', '59.5', '26.788'},
         {'10.5', '60.5', '26.947'},
         {'10.5', '61.5', '27.113'},
         {'10.5', '62.5', '27.287'},
         {'63.5', '10.5', '27.471'},
         {'10.5', '27.658', '64.5'},
         {'10.5', '27.836', '65.5'},
         {'10.5', '66.5', '27.991'},
         {'67.5', '10.5', '28.107'},
         {'10.5', '28.173', '68.5'},
         {'10.5', '28.18', '69.5'},
         {'10.5', '70.5', '28.123'},
         {'10.5', '27.992', '71.5'},
         {'10.5', '27.771', '72.5'},
         {'10.5', '73.5', '27.448'},
         {'27.05', '10.5', '74.5'},
         {'11.5', '55.5', '26.045'},
         {'11.5', '26.156', '56.5'},
         {'11.5', '57.5', '26.271'},
         {'11.5', '26.407', '58.5'},
         {'11.5', '59.5', '26.555'},
         {'11.5', '26.708', '60.5'},
         {'11.5', '61.5', '26.869'},
         {'11.5', '62.5', '27.042'},
         {'63.5', '11.5', '27.23'},
         {'11.5', '27.429', '64.5'},
         {'27.624', '11.5', '65.5'},
         {'11.5', '66.5', '27.8'},
         {'67.5', '11.5', '27.936'},
         {'11.5', '28.016', '68.5'},
         {'11.5', '28.032', '69.5'},
         {'27.976', '11.5', '70.5'},
         {'11.5', '71.5', '27.84'},
         {'27.611', '11.5', '72.5'},
         {'27.266', '11.5', '73.5'},
         {'11.5', '26.787', '74.5'},
         {'26.231', '55.5', '12.5'},
         {'12.5', '25.975', '56.5'},
         {'57.5', '12.5', '26.023'},
         {'58.5', '12.5', '26.152'},
         {'26.304', '59.5', '12.5'},
         {'26.462', '12.5', '60.5'},
         {'26.625', '12.5', '61.5'},
         {'62.5', '12.5', '26.801'},
         {'63.5', '12.5', '26.995'},
         {'27.203', '12.5', '64.5'},
         {'27.413', '12.5', '65.5'},
         {'66.5', '27.605', '12.5'},
         {'67.5', '12.5', '27.757'},
         {'12.5', '27.855', '68.5'},
         {'27.885', '12.5', '69.5'},
         {'70.5', '27.839', '12.5'},
         {'12.5', '71.5', '27.711'},
         {'27.492', '12.5', '72.5'},
         {'27.157', '12.5', '73.5'},
         {'26.687', '12.5', '74.5'},
         {'13.5', '55.5', '25.331'},
         {'13.5', '25.477', '56.5'},
         {'13.5', '25.648', '57.5'},
         {'13.5', '58.5', '25.835'},
         {'13.5', '59.5', '26.021'},
         {'13.5', '26.201', '60.5'},
         {'13.5', '26.379', '61.5'},
         {'13.5', '26.566', '62.5'},
         {'13.5', '26.769', '63.5'},
         {'13.5', '64.5', '26.988'},
         {'13.5', '27.207', '65.5'},
         {'13.5', '66.5', '27.409'},
         {'13.5', '67.5', '27.576'},
         {'13.5', '27.69', '68.5'},
         {'13.5', '27.736', '69.5'},
         {'13.5', '70.5', '27.71'},
         {'13.5', '27.612', '71.5'},
         {'13.5', '72.5', '27.443'},
         {'13.5', '73.5', '27.153'},
         {'13.5', '26.426', '74.5'},
         {'55.5', '14.5', '24.555'},
         {'24.896', '14.5', '56.5'},
         {'57.5', '14.5', '25.198'},
         {'25.47', '58.5', '14.5'},
         {'25.711', '59.5', '14.5'},
         {'14.5', '25.927', '60.5'},
         {'26.13', '14.5', '61.5'},
         {'62.5', '14.5', '26.335'},
         {'63.5', '26.553', '14.5'},
         {'26.783', '14.5', '64.5'},
         {'14.5', '65.5', '27.01'},
         {'27.217', '66.5', '14.5'},
         {'67.5', '27.387', '14.5'},
         {'27.508', '14.5', '68.5'},
         {'27.567', '14.5', '69.5'},
         {'27.567', '70.5', '14.5'},
         {'14.5', '71.5', '27.522'},
         {'27.477', '14.5', '72.5'},
         {'27.566', '14.5', '73.5'},
         {'23.81', '55.5', '15.5'},
         {'15.5', '24.299', '56.5'},
         {'57.5', '24.728', '15.5'},
         {'58.5', '15.5', '25.096'},
         {'59.5', '15.5', '25.4'},
         {'25.657', '15.5', '60.5'},
         {'25.888', '15.5', '61.5'},
         {'26.113', '62.5', '15.5'},
         {'63.5', '15.5', '26.346'},
         {'26.584', '15.5', '64.5'},
         {'15.5', '26.813', '65.5'},
         {'66.5', '27.018', '15.5'},
         {'67.5', '15.5', '27.182'},
         {'27.297', '15.5', '68.5'},
         {'15.5', '27.358', '69.5'},
         {'27.374', '70.5', '15.5'},
         {'27.365', '15.5', '71.5'},
         {'15.5', '27.343', '72.5'},
         {'27.138', '15.5', '73.5'},
         {'55.5', '23.102', '16.5'},
         {'56.5', '23.731', '16.5'},
         {'24.288', '57.5', '16.5'},
         {'58.5', '24.767', '16.5'},
         {'59.5', '25.122', '16.5'},
         {'25.41', '60.5', '16.5'},
         {'25.665', '61.5', '16.5'},
         {'25.909', '62.5', '16.5'},
         {'63.5', '26.152', '16.5'},
         {'26.392', '64.5', '16.5'},
         {'26.616', '65.5', '16.5'},
         {'66.5', '26.807', '16.5'},
         {'67.5', '26.953', '16.5'},
         {'68.5', '27.049', '16.5'},
         {'69.5', '27.098', '16.5'},
         {'27.116', '70.5', '16.5'},
         {'27.155', '71.5', '16.5'},
         {'27.385', '72.5', '16.5'},
         {'17.5', '23.226', '56.5'},
         {'57.5', '23.917', '17.5'},
         {'58.5', '17.5', '24.558'},
         {'24.902', '59.5', '17.5'},
         {'25.192', '17.5', '60.5'},
         {'17.5', '61.5', '25.459'},
         {'25.714', '62.5', '17.5'},
         {'63.5', '17.5', '25.962'},
         {'26.196', '17.5', '64.5'},
         {'26.406', '17.5', '65.5'},
         {'66.5', '26.575', '17.5'},
         {'67.5', '26.693', '17.5'},
         {'26.76', '17.5', '68.5'},
         {'26.778', '17.5', '69.5'},
         {'70.5', '17.5', '26.757'},
         {'26.709', '17.5', '71.5'},
         {'17.5', '72.5', '26.63'},
         {'18.5', '24.641', '58.5'},
         {'18.5', '59.5', '24.721'},
         {'24.97', '18.5', '60.5'},
         {'18.5', '61.5', '25.241'},
         {'18.5', '25.503', '62.5'},
         {'63.5', '18.5', '25.749'},
         {'18.5', '25.971', '64.5'},
         {'18.5', '26.159', '65.5'},
         {'18.5', '66.5', '26.302'},
         {'67.5', '18.5', '26.391'},
         {'18.5', '26.428', '68.5'},
         {'18.5', '26.416', '69.5'},
         {'18.5', '70.5', '26.36'},
         {'18.5', '71.5', '26.256'},
         {'18.5', '26.076', '72.5'},
         {'19.5', '58.5', '23.902'},
         {'19.5', '24.346', '59.5'},
         {'19.5', '24.681', '60.5'},
         {'19.5', '61.5', '24.974'},
         {'19.5', '62.5', '25.241'},
         {'19.5', '25.483', '63.5'},
         {'19.5', '64.5', '25.69'},
         {'19.5', '25.855', '65.5'},
         {'19.5', '66.5', '25.97'},
         {'19.5', '26.035', '67.5'},
         {'19.5', '26.052', '68.5'},
         {'19.5', '26.026', '69.5'},
         {'19.5', '70.5', '25.959'},
         {'19.5', '71.5', '25.859'},
         {'19.5', 'None', '72.5'}],
        ordered=True,
    )


@check50.check(exists)
def test7():
    """7.sql produces correct result"""
    check_single_cell(run_query("7.sql"), '27.62')


@check50.check(exists)
def test8():
    """8.sql produces correct result"""
    check_multi_col(
        run_query("8.sql"),
        [{'-46.5', '-1.837', '-76.5'},
         {'-50.5', '-1.81', '-75.5'},
         {'-1.797', '-48.5', '-74.5'},
         {'-73.5', '-1.797', '-42.5'},
         {'95.5', '-1.793', '82.5'},
         {'94.5', '-1.792', '85.5'},
         {'-1.791', '95.5', '85.5'},
         {'95.5', '84.5', '-1.79'},
         {'92.5', '84.5', '-1.789'},
         {'-1.787', '84.5', '93.5'}],
        ordered=True,
    )


@check50.check(exists)
def test9():
    """9.sql produces correct result"""
    check_multi_col(
        run_query("9.sql"),
        [{'30.559', '24.5', '52.5'},
         {'41.5', '17.5', '29.936'},
         {'42.5', '29.892', '16.5'},
         {'17.5', '29.866', '40.5'},
         {'29.789', '-6.5', '157.5'},
         {'41.5', '29.773', '16.5'},
         {'-2.5', '149.5', '29.768'},
         {'-4.5', '165.5', '29.76'},
         {'-4.5', '166.5', '29.759'},
         {'167.5', '-5.5', '29.756'}],
        ordered=True,
    )


@check50.check(exists)
def test10():
    """10.sql produces correct result"""
    check_single_cell(run_query("10.sql"), '168')


def run_query(filename):
    """
    Runs the SQL query contained in 'filename' and returns its output.

    positional arguments:
        filename (str)      file containing SQL query

    returns:
        list[dict]
    """

    try:
        with open(filename) as f:
            query = f.read().strip()
            query = sqlparse.format(query, strip_comments=True).strip()
        db = SQL("sqlite:///normals.db")
        result = db.execute(query)
        return result
    except Exception as e:
        raise check50.Failure(f"Error when executing query: {str(e)}")


def check_single_col(actual, expected, ordered=False):
    """
    Checks that the single column in 'actual' matches 'expected'.

    positional arguments:
        actual (list[dict])       result returned by run_query
        expected (list)           expected result to match against

    options:
        ordered (bool)            whether to check whether actual's order matches expected's

    returns:
        None

    raises:
        check50.Mismatch if actual does not match expected
        check50.Failure if error occurs
    """

    # convert list to list of frozen sets or set of frozen sets
    try:
        if ordered:
            expected = [frozenset([elt]) for elt in expected]
        else:
            expected = {frozenset([elt]) for elt in expected}
    except Exception as e:
        raise check50.Failure(f"Error when reading expected result: {str(e)}")
    return _check(actual, expected, ordered)


def check_single_cell(actual, expected):
    """
    Checks that the single cell in 'actual' matches 'expected'.

    positional arguments:
        actual (list[dict])       result returned by run_query
        expected (single element) expected result to match against

    returns:
        None

    raises:
        check50.Mismatch if actual does not match expected
        check50.Failure if error occurs
    """

    # convert element to list of frozen set; ordered doesn't matter
    try:
        expected = [frozenset([expected])]
    except Exception as e:
        raise check50.Failure(f"Error when reading expected result: {str(e)}")
    return _check(actual, expected, ordered=True)


def check_multi_col(actual, expected, ordered=False):
    """
    Checks that the columns in 'actual' matches 'expected'.

    positional arguments:
        actual (list[dict])       result returned by run_query
        expected (list[set])      expected result to match against

    options:
        ordered (bool)            whether to check whether actual's order matches expected's

    returns:
        None

    raises:
        check50.Mismatch if actual does not match expected
        check50.Failure if error occurs
    """

    # convert list of sets to list of frozen sets or set of frozen sets
    try:
        if ordered:
            expected = [frozenset(unfrozen_set) for unfrozen_set in expected]
        else:
            expected = {frozenset(unfrozen_set) for unfrozen_set in expected}
    except Exception as e:
        raise check50.Failure(f"Error when reading expected result: {str(e)}")
    return _check(actual, expected, ordered)


def _check(actual, expected, ordered=False):
    """
    Checks that the SQL output in 'actual' matches 'expected'.

    positional arguments:
        actual (list[dict])       result returned by run_query
        expected                  expected result to match against
            if ordered, should be list[frozenset];
            otherwise, set[frozenset]  (frozenset is needed for nested sets)

    options:
        ordered (bool)            whether to check whether actual's order matches expected's

    returns:
        None

    raises:
        check50.Mismatch if actual does not match expected
        check50.Failure if error occurs
    """

    # make sure query returned results
    if actual is None or actual == []:
        raise check50.Failure("Query did not return results")

    # convert list of dictionaries to list of frozen sets or set of frozen sets,
    # depending on whether 'ordered' is True
    try:
        result = []
        for row_dict in actual:
            values = [str(elt) for elt in list(row_dict.values())]
            result.append(frozenset(values))
        result = result if ordered else set(result)
    except Exception as e:
        raise check50.Failure(f"Error with format of query: {str(e)}")

    # check result of query against expected values
    if result != expected:
        raise check50.Mismatch(
            "\n".join(", ".join(list(sorted(entry))) for entry in list(expected)),
            "\n".join(", ".join(list(sorted(entry))) for entry in list(result)),
        )
    return None
